name: Build AlmaLinux 9 Templates

on:
  push:
    branches: [ main ]
    paths:
      - 'cloud/almalinux/x86_64/**'
      - 'scripts/**'
      - '.github/workflows/build-almalinux-9.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'cloud/almalinux/x86_64/**'
      - 'scripts/**'
      - '.github/workflows/build-almalinux-9.yml'
  workflow_dispatch:
    inputs:
      create_release:
        description: 'Create a release after successful build'
        required: false
        default: false
        type: boolean
      release_tag:
        description: 'Release tag (leave empty for auto-generated)'
        required: false
        default: ''
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 90
    strategy:
      matrix:
        variant: [efi, bios]
        include:
          - variant: efi
            pkvars_file: almalinux-9-efi-x86_64.pkvars.hcl
            vm_name: almalinux-9-efi-x86_64
          - variant: bios
            pkvars_file: almalinux-9-bios-x86_64.pkvars.hcl
            vm_name: almalinux-9-bios-x86_64
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Packer
        uses: hashicorp/setup-packer@main
        with:
          version: latest
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64
      
      - name: Enable KVM group
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
          sudo usermod -a -G kvm $USER
      
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-system-x86 qemu-utils genisoimage ovmf
          # Verify KVM is available
          sudo kvm-ok || echo "KVM not available, using software emulation"
      
      - name: Initialize Packer
        run: |
          cd cloud/almalinux/x86_64
          packer init .
      
      - name: Validate Packer template
        run: |
          cd cloud/almalinux/x86_64
          packer validate -var-file=${{ matrix.pkvars_file }} almalinux-9-x86_64.pkr.hcl
      
      - name: Build template (${{ matrix.variant }})
        run: |
          cd cloud/almalinux/x86_64
          # Use appropriate resources for GitHub Actions environment
          export PACKER_LOG=1
          export PACKER_LOG_PATH="/tmp/packer.log"
          # GitHub Actions runners have 2 CPU cores and 7GB RAM
          # Use conservative settings to avoid resource exhaustion
          # Increase timeouts for CI environment and optimize for faster builds
          timeout 75m packer build \
            -var="cpus=2" \
            -var="memory=2048" \
            -var="ssh_timeout=900s" \
            -var="headless=true" \
            -on-error=cleanup \
            -var-file=${{ matrix.pkvars_file }} \
            almalinux-9-x86_64.pkr.hcl
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: almalinux-9-${{ matrix.variant }}-x86_64
          path: |
            cloud/almalinux/x86_64/output-${{ matrix.vm_name }}/*
          retention-days: 30
      
      - name: Upload packer logs on failure
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: packer-logs-${{ matrix.variant }}
          path: /tmp/packer.log
          retention-days: 7

  release:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ (github.ref == 'refs/heads/main' && github.event_name == 'push') || (github.event_name == 'workflow_dispatch' && inputs.create_release == 'true') }}
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts
      
      - name: Generate release tag
        id: tag
        run: |
          if [ -n "${{ inputs.release_tag }}" ]; then
            echo "tag=${{ inputs.release_tag }}" >> $GITHUB_OUTPUT
          else
            # Generate tag based on date and commit
            TAG="almalinux-9-$(date +'%Y%m%d')-$(git rev-parse --short HEAD)"
            echo "tag=$TAG" >> $GITHUB_OUTPUT
          fi
      
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          release_name: AlmaLinux 9 Templates - ${{ steps.tag.outputs.tag }}
          body: |
            # AlmaLinux 9 Cloud Templates
            
            This release contains AlmaLinux 9 cloud templates built for both EFI and BIOS boot modes.
            
            ## Templates Included
            - **AlmaLinux 9 EFI x86_64**: `almalinux-9-efi-x86_64.qcow2`
            - **AlmaLinux 9 BIOS x86_64**: `almalinux-9-bios-x86_64.qcow2`
            
            ## Build Information
            - Built from commit: ${{ github.sha }}
            - Build date: $(date +'%Y-%m-%d %H:%M:%S UTC')
            - Source: [GitHub Repository](https://github.com/${{ github.repository }})
            
            ## Usage
            These templates are ready to use with CloudStack, OpenStack, or any QEMU/KVM-based virtualization platform.
          draft: false
          prerelease: false
      
      - name: List artifact structure
        run: |
          echo "Artifact structure:"
          find ./artifacts -type f -name "*.qcow2" | head -10
      
      - name: Upload EFI template to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/almalinux-9-efi-x86_64/almalinux-9-efi-x86_64.qcow2
          asset_name: almalinux-9-efi-x86_64.qcow2
          asset_content_type: application/octet-stream
      
      - name: Upload BIOS template to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/almalinux-9-bios-x86_64/almalinux-9-bios-x86_64.qcow2
          asset_name: almalinux-9-bios-x86_64.qcow2
          asset_content_type: application/octet-stream